"Rule ID","76","950","951","952","953","954","955","957","958","959","960","961","965","966","969","971","972","973","974","976","978","979","980","981","983","985","986","987","988","989","990","992","994","996","997","999","1002","1003","1004","1005","1007","1012","1013","1014","1019","1021","1022","1023","1024","1026","1027","1028","1030","1031","1032","1033","1034","1035","1036","1037","1038","1039","1041","1042","1043","1044","1045","1046","1047","1048","1049","1052","1054","1055","1057","1058","1059","1060","1062","1063","1065","1067","1068","1069","1071","1072","1073","1076","1077","1081","1084","1085","1087","1088","1089","1095","1097","1098","1099","1100","1101","1102","1103","1106","1107","1109","1111","1112","1113","1115","1116","1117","1118","1120","1121","1122","1123","1124","1125","1126","1127","1128","1129","1131","1132","1133","1134","1135","1136","1137","1140","1141","1147","1150","1152","1154","1155","1156","1157","1158","1159","1160","1164","1165","1167","1170","1171","1172","1173","1174","1175","1176","1177","1178","1180","1181","1183","1184","1185","1186","1187","1188","1190","1192","1193","1194","1200","1202","1203","1204","1205","1207","1208","1210","1211","1212","1215","1216","1217","1219","1220","1221","1222","1223","1224","1226","1228","1229","1230","1232","1233","1234","1235","1236","1237","1238","1239","1241","1242","1243","1244","1245","1246","1247","1249","1250","1254","1255","1256","1257","1259","1261","1262","1263","1265","1267","1269","1271","1272","1273","1274","1275","1276","1277","1279","1280","1283","1285","1286","1292","1293","1294","1295","1298","1300","1301","1302","1303","1305","1306","1307","1308","1311","1314","1315","1316","1317","1318","1319","1321","1322","1323","1324","1326","1327","1329","1330","1331","1332","1333","1334","1336","1338","1339","1340","1341","1342","1343","1344","1347","1348","1351","1353","1354","1357","1360","1361","1362","1365","1366","1368","1370","1371","1373","1374","1376","1377","1378","1379","1380","1381","1382"
"Description","Source files should not have any duplicated blocks","Try-with-resources should be used","Cookies should be ""secure""","Return values should not be ignored when they contain the operation status code","Resources should be closed","Classes should not be empty","""equals(Object obj)"" should test argument type","Packages containing only ""package-info.java"" should be removed","""getClass"" should not be used for synchronization","""enum"" fields should not be publicly mutable","""Stream"" call chains should be simplified when possible","Modifiers should be declared in the correct order","Map values should not be replaced unconditionally","Methods should not have identical implementations","""java.nio.Files#delete"" should be preferred","Assignments should not be redundant","""throws"" declarations should not be superfluous","The diamond operator (""<>"") should be used","""toArray"" should be passed an array of the proper type","Class variable fields should not have public accessibility","The non-serializable super class of a ""Serializable"" class should have a no-argument constructor","Class names should not shadow interfaces or superclasses","Inappropriate ""Collection"" calls should not be made","Short-circuit logic should be used in boolean contexts","Child class methods named for parent class methods should be overrides","String function use should be optimized for single characters","Future keywords should not be used as names","Classes from ""sun.*"" packages should not be used","String literals should not be duplicated","Exception types should not be tested using ""instanceof"" in catch blocks","Subclasses that add fields should override ""equals""","Static fields should not be updated in constructors","Array designators ""[]"" should be located after the type in method signatures","URIs should not be hardcoded","""finalize"" should not set fields to ""null""","Array designators ""[]"" should be on the type, not the variable","""compareTo"" should not return ""Integer.MIN_VALUE""","Nested code blocks should not be used","Classes named like ""Exception"" should extend ""Exception"" or a subclass","Double-checked locking should not be used","Default EJB interceptors should be declared in ""ejb-jar.xml""","""writeObject"" should not be the only ""synchronized"" code in a class","Empty statements should be removed","SQL binding mechanisms should be used","""wait"" should not be called when multiple locks are held","Standard outputs should not be used directly to log anything","""Externalizable"" classes should have no-arguments constructors","Ints and longs should not be shifted by zero or more than their number of bits-1","""readResolve"" methods should be inheritable","Custom serialization method signatures should meet requirements","Silly math should not be performed","Math operands should be cast before assignment","""Serializable"" inner classes of non-serializable classes should be ""static""","Raw byte values should not be used in bitwise operations in combination with shifts","TestCases should contain tests","Fields in non-serializable classes should not be ""transient""","JUnit assertions should not be used in ""run"" methods","Credentials should not be hard-coded","Loops should not be infinite","""private"" methods called only by inner classes should be moved to those classes","JUnit test cases should call super methods","Abstract methods should not be redundant","Loops should not contain more than a single ""break"" or ""continue"" statement","Deprecated elements should have both the annotation and the Javadoc tag","Lamdbas containing only one statement should not nest this statement in a block","""Object.wait(...)"" should never be called on objects that implement ""java.util.concurrent.locks.Condition""","Methods and field names should not be the same or differ only by capitalization","Anonymous inner classes containing only one method should become lambdas","""Iterator.hasNext()"" should not call ""Iterator.next()""","Tests should not be ignored","Switch cases should end with an unconditional ""break"" statement","Annotation repetitions should not be wrapped","""Thread.sleep"" should not be used in tests","JUnit rules should be used","Local variables should not shadow class fields","All branches in a conditional structure should not have exactly the same implementation","Exceptions should not be thrown from servlet methods","""DateUtils.truncate"" from Apache Commons Lang library should not be used","Synchronization should not be based on Strings or boxed primitives","Related ""if/else if"" statements should not have the same condition","Parentheses should be removed from a single lambda input parameter when its type is inferred","Lambdas should be replaced with method references","Dead stores should be removed","""toString()"" should never be called on a String object","Abstract classes without fields should be converted to interfaces","""switch"" statements should end with ""default"" clauses","""@Deprecated"" code should not be used","""ThreadLocal.withInitial"" should be preferred","Redundant casts should not be used","A field should not duplicate the name of its containing class","""indexOf"" checks should use a start position","Fields in a ""Serializable"" class should either be transient or serializable","Boolean checks should not be inverted","""close()"" calls should not be redundant","""equals(Object obj)"" and ""hashCode()"" should be overridden in pairs","Collection sizes and array length comparisons should make sense","Web applications should not have a ""main"" method","Exception should not be created without being thrown","""equals"" method overrides should accept ""Object"" parameters","""public static"" fields should be constant","Week Year (""YYYY"") should not be used for date formatting","Unused ""private"" classes should be removed","Inheritance tree of classes should not be too deep","""StringBuilder"" and ""StringBuffer"" should not be instantiated with a character","Declarations should use Java collection interfaces such as ""List"" rather than specific implementation classes such as ""LinkedList""","Conditionals should start on new lines","Getters and setters should be synchronized in pairs","IP addresses should not be hardcoded","Non-thread-safe fields should not be static","The Object.finalize() method should not be overriden","""for"" loop stop conditions should be invariant","Method parameters, caught exceptions and foreach variables' initial values should not be ignored","Silly bit operations should not be performed","""Threads"" should not be used where ""Runnables"" are expected","The default unnamed package should not be used","Methods should not be named ""hashcode"" or ""equal""","""readObject"" should not be ""synchronized""","Non-constructor methods should not have the same name as the enclosing class","The value returned from a stream read should be checked","Methods should not return constants","""read"" and ""readLine"" return values should be used","Neither ""Math.abs"" nor negation should be used on numbers that could be ""MIN_VALUE""","Execution of the Garbage Collector should be triggered only by the JVM","""null"" should not be used with ""Optional""","Arrays should not be created for varargs parameters","Thread.run() should not be called directly","Methods returns should not be invariant","""switch"" statements should not contain non-case labels","Zero should not be a possible denominator","Private fields only used as local variables in methods should become local variables","""equals(Object obj)"" should be overridden along with the ""compareTo(T obj)"" method","Generic wildcard types should not be used in return parameters","""Arrays.stream"" should be used for primitive arrays","Constants should not be defined in interfaces","Nested ""enum""s should not be declared static","""super.finalize()"" should be called at the end of ""Object.finalize()"" implementations","""File.createTempFile"" should not be used to create a directory","""clone"" should not be overridden","""Map.get"" and value test should be replaced with single method call","""catch"" clauses should do more than rethrow","Assertions should be complete","Maps with keys that are enum values should be replaced with EnumMap","Strings should not be concatenated using '+' in a loop","Identical expressions should not be used on both sides of a binary operator","Sections of code should not be ""commented out""","Two branches in a conditional structure should not have exactly the same implementation","Classes should not be compared by name","Jump statements should not be used unconditionally","""for"" loop increment clauses should modify the loops' counters","""@NonNull"" values should not be set to null","Java 8's ""Files.exists"" should not be used","""=+"" should not be used instead of ""+=""","Inappropriate regular expressions should not be used","Method overrides should not change contracts","""switch"" statements should have at least 3 ""case"" clauses","Variables should not be self-assigned","Multiple variables should not be declared on the same line","Consumed Stream pipelines should not be reused","The Object.finalize() method should not be called","Intermediate Stream methods should not be left unused","""Preconditions"" and logging arguments should not require evaluation","Assignments should not be made from within sub-expressions","""entrySet()"" should be iterated when both the key and value are needed","""@Override"" should be used on overriding and implementing methods","A ""for"" loop update clause should move the counter in the right direction","Parsing should be used to convert ""Strings"" to primitives","Exceptions should not be thrown in finally blocks","Loop conditions should be true at least once","Primitives should not be boxed just for ""String"" conversion","Exception classes should be immutable","Classes extending java.lang.Thread should override the ""run"" method","""HttpServletRequest.getRequestedSessionId()"" should not be used","Objects should not be created only to ""getClass""","Expressions used in ""assert"" should not produce side effects","Empty arrays and collections should be returned instead of null","Null pointers should not be dereferenced","Class names should comply with a naming convention","Method names should comply with a naming convention","Enumeration should not be implemented","Constructors should not be used to instantiate ""String"" and primitive-wrapper classes","String.valueOf() should not be appended to a String","Values should not be uselessly incremented","Labels should not be used","Collection.isEmpty() should be used to test for emptiness","""ScheduledThreadPoolExecutor"" should not have 0 core threads","Case insensitive string comparisons should be made without intermediate upper or lower casing","Primitive wrappers should not be instantiated only for ""toString"" or ""compareTo"" calls","""Double.longBitsToDouble"" should not be used for ""int""","Printf-style format strings should be used correctly","Classes should not access their own subclasses during initialization","Throwable and Error should not be caught","Classes that override ""clone"" should be ""Cloneable"" and call ""super.clone()""","JUnit framework methods should be declared properly","""wait"", ""notify"" and ""notifyAll"" should only be called when a lock is obviously held on an object","""Iterator.next()"" methods should throw ""NoSuchElementException""","""runFinalizersOnExit"" should not be called","Static non-final field names should comply with a naming convention","Overriding methods should do more than simply call the same method in the super class","Printf-style format strings should not lead to unexpected behavior at runtime","Dissimilar primitive wrappers should not be used with the ternary operator without explicit casting","Methods should not be empty","Unused labels should be removed","""Object.wait(...)"" and ""Condition.await(...)"" should be called inside a ""while"" loop","Boxing and unboxing should not be immediately reversed","Collapsible ""if"" statements should be merged","Cryptographic RSA algorithms should always incorporate OAEP (Optimal Asymmetric Encryption Padding)","""wait(...)"" should be used instead of ""Thread.sleep(...)"" when a lock is held","Unused ""private"" fields should be removed","Neither DES (Data Encryption Standard) nor DESede (3DES) should be used","""Cloneables"" should implement ""clone""","Silly equality checks should not be made","Public constants and fields initialized at declaration should be ""static final"" rather than merely ""final""","Only static class initializers should be used","Unused method parameters should be removed","Methods of ""Random"" that return floating point values should not be used in random integer generation","""Object.finalize()"" should remain protected (versus public) when overriding","The signature of ""finalize()"" should match that of ""Object.finalize()""","""InterruptedException"" should not be ignored","Child class fields should not shadow parent class fields","Defined filters should be used","Mutable fields should not be ""public static""","Catches should be combined","Double Brace Initialization should not be used","Inner class calls to super class methods should be unambiguous","Ternary operators should not be nested","Unused local variables should be removed","""indexOf"" checks should not be for positive numbers","""PreparedStatement"" and ""ResultSet"" methods should be called with valid indices","Deprecated ""${pom}"" properties should not be used","Instance methods should not write to ""static"" fields","Dependencies should not have ""system"" scope","Boolean literals should not be redundant","Local variables should not be declared and then immediately returned or thrown","Return of boolean expressions should not be wrapped into an ""if-then-else"" statement","Redundant pairs of parentheses should be removed","Unused ""private"" methods should be removed","Useless imports should be removed","""switch"" statements should not have too many ""case"" clauses","Unused type parameters should be removed","Null should not be returned from a ""Boolean"" method","Assertion arguments should be passed in the correct order","Utility classes should not have public constructors","""static"" members should be accessed statically","Classes with only ""static"" methods should not be instantiated","Multiline blocks should be enclosed in curly braces","""compareTo"" results should not be checked for specific values","""Lock"" objects should not be ""synchronized""","Non-serializable objects should not be stored in ""HttpSession"" objects","""Collections.EMPTY_LIST"", ""EMPTY_MAP"", and ""EMPTY_SET"" should not be used","Return values from functions without side effects should not be ignored","Package declaration should match source file directory",""".equals()"" should not be used to test the values of ""Atomic"" classes","""notifyAll"" should be used","Blocks should be synchronized on ""private final"" fields","Cognitive Complexity of methods should not be too high","Optional value should only be accessed after calling isPresent()","Generic exceptions should never be thrown","Synchronized classes Vector, Hashtable, Stack and StringBuffer should not be used","Non-serializable classes should not be written","Methods should not have too many parameters","Try-catch blocks should not be nested","Invalid ""Date"" values should not be used","Non-public methods should not be ""@Transactional""","Jump statements should not occur in ""finally"" blocks","""URL.hashCode"" and ""URL.equals"" should be avoided","A ""while"" loop should be used instead of a ""for"" loop","Nested blocks of code should not be left empty","""ResultSet.isLast()"" should not be used","""BigDecimal(double)"" should not be used","Collections should not be passed as arguments to their own methods","IllegalMonitorStateException should not be caught","""hashCode"" and ""toString"" should not be called on array instances","Throwable.printStackTrace(...) should not be called","Methods ""wait(...)"", ""notify()"" and ""notifyAll()"" should not be called on Thread instances","Package names should comply with a naming convention","""SingleConnectionFactory"" instances should be set to ""reconnectOnException""","Value-based objects should not be serialized","Reflection should not be used to check non-runtime annotations","Conditionally executed blocks should be reachable","Local variable and method parameter names should comply with a naming convention","Locks should be released","Type parameter names should comply with a naming convention","Deprecated code should be removed","Interface names should comply with a naming convention","Track uses of ""FIXME"" tags","Track uses of ""TODO"" tags","Field names should comply with a naming convention","Servlets should not have mutable instance fields","Value-based classes should not be used for locking","Boolean expressions should not be gratuitous","Constant names should comply with a naming convention","""toString()"" and ""clone()"" methods should not return null"
"Severity","MAJOR","CRITICAL","MINOR","MINOR","BLOCKER","MINOR","MINOR","MINOR","MAJOR","MINOR","MINOR","MINOR","MAJOR","MAJOR","MAJOR","MAJOR","MINOR","MINOR","MINOR","MINOR","MINOR","CRITICAL","MAJOR","BLOCKER","MAJOR","MAJOR","BLOCKER","MAJOR","CRITICAL","MAJOR","MINOR","MAJOR","MINOR","MINOR","MINOR","MINOR","MINOR","MINOR","MAJOR","BLOCKER","BLOCKER","MAJOR","MINOR","BLOCKER","BLOCKER","MAJOR","MAJOR","MINOR","CRITICAL","MAJOR","MAJOR","MINOR","MINOR","MAJOR","BLOCKER","MINOR","CRITICAL","BLOCKER","BLOCKER","MINOR","BLOCKER","MINOR","MINOR","MAJOR","MINOR","MAJOR","BLOCKER","MAJOR","MAJOR","MAJOR","BLOCKER","MINOR","MAJOR","MINOR","MAJOR","MAJOR","MINOR","MAJOR","MAJOR","MAJOR","MINOR","MINOR","MAJOR","MINOR","MINOR","CRITICAL","MINOR","MINOR","MINOR","MAJOR","MINOR","CRITICAL","MINOR","MINOR","MINOR","MAJOR","CRITICAL","MAJOR","MAJOR","MINOR","MAJOR","MAJOR","MAJOR","MAJOR","MINOR","CRITICAL","MAJOR","MINOR","MAJOR","CRITICAL","MAJOR","MINOR","BLOCKER","MAJOR","MINOR","MAJOR","MAJOR","MAJOR","MINOR","MINOR","MAJOR","MINOR","CRITICAL","MAJOR","MINOR","MAJOR","BLOCKER","BLOCKER","CRITICAL","MINOR","MINOR","CRITICAL","MAJOR","CRITICAL","MINOR","CRITICAL","CRITICAL","BLOCKER","MAJOR","MINOR","BLOCKER","MINOR","MINOR","MAJOR","MAJOR","MAJOR","MAJOR","MAJOR","CRITICAL","MINOR","MAJOR","MAJOR","MAJOR","CRITICAL","MINOR","MAJOR","MINOR","MAJOR","MAJOR","MAJOR","MAJOR","MAJOR","MAJOR","MAJOR","MAJOR","MINOR","CRITICAL","MAJOR","MAJOR","MINOR","MAJOR","CRITICAL","MAJOR","MAJOR","MAJOR","MAJOR","MINOR","MINOR","MAJOR","MAJOR","MINOR","MAJOR","MAJOR","MINOR","CRITICAL","MINOR","MINOR","MAJOR","MAJOR","CRITICAL","MAJOR","MINOR","BLOCKER","MAJOR","MINOR","CRITICAL","MINOR","MINOR","BLOCKER","MAJOR","CRITICAL","MAJOR","CRITICAL","MINOR","MAJOR","CRITICAL","BLOCKER","MAJOR","BLOCKER","CRITICAL","MAJOR","MINOR","MAJOR","MAJOR","MINOR","CRITICAL","CRITICAL","MAJOR","BLOCKER","CRITICAL","MINOR","MINOR","MINOR","MAJOR","MAJOR","MINOR","CRITICAL","BLOCKER","MINOR","CRITICAL","CRITICAL","MINOR","MINOR","MINOR","MAJOR","MAJOR","MINOR","MAJOR","MAJOR","CRITICAL","MAJOR","MAJOR","MAJOR","MAJOR","MAJOR","MINOR","MAJOR","MAJOR","MINOR","MAJOR","CRITICAL","MAJOR","MAJOR","MAJOR","CRITICAL","MAJOR","MAJOR","MAJOR","MAJOR","MAJOR","MAJOR","MAJOR","MAJOR","MAJOR","MAJOR","MINOR","MAJOR","MAJOR","MAJOR","MAJOR","CRITICAL","MAJOR","MINOR","BLOCKER","MINOR","MAJOR","MINOR","MAJOR","MAJOR","MINOR","CRITICAL","MINOR","INFO","MINOR","MAJOR","INFO","MINOR","MAJOR","MAJOR","MAJOR","CRITICAL","MAJOR"
"Tags","pitfall","cert,java8,pitfall","cwe,owasp-a2,owasp-a6","cert,cwe,error-handling,misra","cert,cwe,denial-of-service,leak","clumsy","","unused","cert,multi-threading","bad-practice","clumsy","convention","suspicious","confusing,duplicate,suspicious","api-design,error-handling","redundant","clumsy,redundant,unused","clumsy","","cwe","serialization","pitfall","cert","cert","pitfall","clumsy,performance","obsolete,pitfall","lock-in,pitfall","design","cert,clumsy,error-handling","suspicious","","convention","android,cert","clumsy,performance","convention","","bad-practice","convention,pitfall","cert,cwe,multi-threading","","confusing","cert,misra,unused","cert,cwe,hibernate,owasp-a1,sans-top25-insecure,sql","deadlock,multi-threading","bad-practice,cert","","cert","pitfall","cert","clumsy","cert,cwe,misra,overflow,sans-top25-risky","cert,serialization","cert","confusing,tests,unused","serialization,unused","tests","cert,cwe,owasp-a2,sans-top25-porous","cert","confusing","tests","confusing","brain-overload","bad-practice,obsolete","java8","suspicious","confusing","java8","","suspicious,tests","cert,cwe,misra,suspicious","java8","bad-practice","tests,unused","cert,pitfall","","cert,cwe,error-handling,owasp-a6","java8,performance","cert,multi-threading","cert,pitfall,unused","java8","java8","cert,cwe,unused","clumsy,finding","java8","cert,cwe,misra","cert,cwe,obsolete","java8","clumsy,redundant","brain-overload","confusing","cwe,serialization","pitfall","redundant","cert,cwe","","cert,cwe,jee","","suspicious","cert,cwe","suspicious","unused","design","pitfall","bad-practice","suspicious","cert,multi-threading","cert","multi-threading","cert,unpredictable","misra,pitfall","misra","suspicious","multi-threading,pitfall","convention","pitfall","confusing","pitfall","cert","confusing","","","bad-practice,unpredictable","java8","clumsy","cert,cwe,multi-threading","","misra,suspicious","cert,cwe,denial-of-service","pitfall","","pitfall","performance","bad-practice","clumsy","cert,cwe","owasp-a9","suspicious","java8","cert,clumsy,finding,unused","tests","performance","performance","cert","misra,unused","design,suspicious","cert,cwe","cert,misra,unused","confusing","cert,cwe","java8,performance","","","suspicious","bad-practice,misra","cert","cert,convention,misra","java8","cert,cwe","java8","performance","cert,cwe,misra,suspicious","performance","bad-practice","cert","performance","cert,error-handling,suspicious","","performance","error-handling","multi-threading,pitfall","cwe,owasp-a2,sans-top25-porous","performance","cert","cert","cert,cwe","convention","convention","obsolete","performance","clumsy","unused","confusing","clumsy","","clumsy","clumsy","","cert,confusing","cert","bad-practice,cert,cwe,error-handling","cert,convention,cwe","tests","multi-threading","unpredictable","cert","convention","clumsy,redundant","cert,pitfall","","suspicious","cert,misra,unused","cert,multi-threading","clumsy","clumsy","cwe,owasp-a5,owasp-a6,sans-top25-porous","cert,multi-threading,performance","cert,unused","cert,cwe,owasp-a6,sans-top25-porous","api-design,convention","cert,unused","convention","pitfall","cert,misra,unused","clumsy","cert,cwe","pitfall","cwe,multi-threading","confusing","injection,owasp-a1","cert,cwe,unpredictable","clumsy","leak","pitfall","confusing","unused","suspicious","sql","maven,obsolete","multi-threading","lock-in,maven","clumsy","clumsy","clumsy","confusing","cert,unused","unused","brain-overload","cert,unused","cert,cwe,pitfall","suspicious,tests","design","pitfall","clumsy","cert,cwe","unpredictable","cert,clumsy,multi-threading","cwe","obsolete,pitfall","cert,misra","pitfall","multi-threading","cert,multi-threading","cert,cwe,multi-threading","brain-overload","cwe","cert,cwe,error-handling","performance","serialization","brain-overload","confusing","","spring","cert,cwe,error-handling","performance","clumsy","suspicious","performance,pitfall,sql","cert","","multi-threading","","error-handling","multi-threading","convention","spring","java8,lock-in,serialization","","cert,cwe,misra,pitfall,unused","convention","cwe,multi-threading","convention","obsolete","convention","cwe","cwe","convention","cert,multi-threading,struts","java8,lock-in,multi-threading","cert,cwe,misra,redundant","convention","cert,cwe"
